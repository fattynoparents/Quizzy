<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:local="clr-namespace:Quizzy">

     <local:ToLowerConverter x:Key="ToLowerConverter" />



    <!--Main Buttons-->
    <ControlTemplate x:Key="EllipseForButtonTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Ellipse Fill="{TemplateBinding Background}"
                                 Margin="4"
                                 StrokeThickness="0" />
            <Ellipse x:Name="ellipsebg"
                                 Fill="{DynamicResource IdealForegroundColorBrush}"
                                 Opacity="0"
                                 Margin="4"
                                 StrokeThickness="0" />
            <Ellipse x:Name="ellipse"
                                 Margin="4"
                                 Stroke="{DynamicResource IdealForegroundColorBrush}"
                                 StrokeThickness="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}, Path=BorderThickness.Left}" Fill="{DynamicResource WindowTitleColorBrush}" />
            <ContentPresenter x:Name="content"                              
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed"
                                 Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ellipsebg"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="0.3"
                                                         Duration="0:0:0" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <!-- some out fading -->
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ellipsebg"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver"
                                 Value="True">
                <Setter TargetName="ellipse"
                                    Property="Opacity"
                                    Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                                 Value="False">
                <Setter TargetName="ellipse"
                                    Property="Opacity"
                                    Value=".5" />
            </Trigger>
            <Trigger Property="IsEnabled"
                                 Value="false">
                <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush7}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    

    <Style x:Key="CustomMetroCircleButtonStyle"
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource MetroCircleButtonStyle}">
        <Setter Property="Template" Value="{StaticResource EllipseForButtonTemplate}"/>
    </Style>

    <!--Main Buttons-->


    <!--Navigation Buttons-->
    <ControlTemplate x:Key="SquareForButtonTemplate" TargetType="{x:Type Button}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>


                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                    Storyboard.TargetName="MouseOverBorder">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                                Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <!--<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)"
                                                                        Storyboard.TargetName="MouseOverBorder">
                                <EasingThicknessKeyFrame KeyTime="0"
                                                                    Value="2" />
                            </ThicknessAnimationUsingKeyFrames>-->

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                    Storyboard.TargetName="Background">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                                Value="0" />
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                    Storyboard.TargetName="PressedBorder">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                                Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)"
                                                                        Storyboard.TargetName="MouseOverBorder">
                                <EasingThicknessKeyFrame KeyTime="0"
                                                                    Value="0" />
                            </ThicknessAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)"
                                                                        Storyboard.TargetName="PressedBorder">
                                <EasingThicknessKeyFrame KeyTime="0"
                                                                    Value="2" />
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                    Storyboard.TargetName="DisabledVisualElement">
                                <SplineDoubleKeyFrame KeyTime="0"
                                                                Value="0.7" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                    Storyboard.TargetName="contentPresenter">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                                Value="0.3" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused" />
                    <VisualState x:Name="Unfocused" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="Valid" />
                    <VisualState x:Name="InvalidFocused" />
                    <VisualState x:Name="InvalidUnfocused" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Background"
                            BorderBrush="#FFCCCCCC"
                            BorderThickness="1"
                            Background="{TemplateBinding Background}" 
                            Opacity="1" />
            <Rectangle x:Name="DisabledVisualElement"
                                Fill="{DynamicResource ControlsDisabledBrush}"
                                IsHitTestVisible="false"
                                Opacity="0" />
            <Border x:Name="MouseOverBorder"
                            BorderBrush="#FFCCCCCC"
                            BorderThickness="1"
                            Background="{DynamicResource AccentColorBrush3}"
                            Opacity="0" />
            <Border x:Name="PressedBorder"
                            Background="{DynamicResource AccentColorBrush}"
                            Opacity="0"
                            BorderBrush="{DynamicResource AccentColorBrush}" />
            <ContentPresenter x:Name="contentPresenter"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content, Converter={StaticResource ToLowerConverter}}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Margin="{TemplateBinding Padding}"
                                        RecognizesAccessKey="True"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        OpacityMask="{x:Null}" />
        </Grid>

        <!--<ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                                Value="True">
                <Setter Property="Foreground"
                                Value="{DynamicResource WhiteBrush}" />
            </Trigger>
            <Trigger Property="IsPressed"
                                Value="true">
                <Setter Property="Foreground"
                                Value="{DynamicResource WhiteBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>-->
    </ControlTemplate>




    <Style x:Key="CustomSquareButtonStyle"
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource SquareButtonStyle}">
        <Setter Property="Background" Value="{StaticResource AccentColorBrush}"/>
        <Setter Property="Template" Value="{StaticResource SquareForButtonTemplate}"/>
    </Style>

    <!--Navigation Buttons-->

    <Style x:Key="MetroDataGridCheckBox"
           TargetType="CheckBox"
           BasedOn="{StaticResource MetroCheckBox}">
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsReadOnly, RelativeSource={RelativeSource AncestorType=DataGridCell}}"
                         Value="True">
                <Setter Property="IsEnabled"
                        Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>