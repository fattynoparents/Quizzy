<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" d1p1:Ignorable="d" 
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006" >
    
     
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />

                <ResourceDictionary Source="Icons.xaml" />
                <ResourceDictionary Source="Templates.xaml" />

            </ResourceDictionary.MergedDictionaries>


            <!-- Controls styles -->
            <Style x:Key="CustomMetroCircleButtonStyle"
                     TargetType="{x:Type Button}"
                     BasedOn="{StaticResource MetroCircleButtonStyle}">
                <Setter Property="Template" Value="{StaticResource EllipseForButtonTemplate}"/>
            </Style>

            <Style x:Key="CustomSquareButtonStyle"
                     TargetType="{x:Type Button}"
                     BasedOn="{StaticResource SquareButtonStyle}">
                <Setter Property="Background" Value="{StaticResource AccentColorBrush}"/>
                <Setter Property="Template" Value="{StaticResource SquareForButtonTemplate}"/>
            </Style>

            <Style x:Key="MetroDataGridCheckBox"
                    TargetType="CheckBox"
                    BasedOn="{StaticResource MetroCheckBox}">
                <Setter Property="Margin" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsReadOnly, RelativeSource={RelativeSource AncestorType=DataGridCell}}" Value="True">
                        <Setter Property="IsEnabled" Value="False" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="VisibleMouseOverButtonStyle"
                   TargetType="Button" BasedOn="{StaticResource ChromelessButtonStyle}">
                <Setter Property="Visibility" Value="Hidden"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListViewItem}},Path=IsMouseOver}" Value="True">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            
        </ResourceDictionary>
   